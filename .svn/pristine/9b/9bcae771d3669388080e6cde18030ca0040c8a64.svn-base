package com.liyang.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.liyang.controller.domain.EntityPage;
import com.liyang.controller.domain.LoanController;
import com.liyang.domain.base.AbstractAuditorState;
import com.liyang.domain.base.AbstractWorkflow;
import com.liyang.domain.base.Tree;
import com.liyang.domain.ordercdd.OrdercddAct;
import com.liyang.domain.ordercdd.OrdercddState;
import com.liyang.domain.ordercdd.OrdercddWorkflow;
import com.liyang.domain.ordercdd.OrdercddWorkflowRepository;
import com.liyang.domain.role.Role;
import com.liyang.domain.user.User;
import com.liyang.domain.user.UserRepository;
import com.liyang.excel.ExcelLoan;
import com.liyang.excel.ExcelMapUtil;
import com.liyang.excel.ExcelUtil;
import com.liyang.service.AccountService;
import com.liyang.service.OrdercddService;
import com.liyang.service.TIMService;
import com.liyang.service.UserService;
import com.liyang.util.TIMSignature;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.*;

@Controller
public class TestController {

    private final static Log log = LogFactory.getLog(TestController.class);
    @Autowired
    private UserRepository userRepository;
    @Autowired
    private TIMService timService;
    @Autowired
    private AccountService accountService;
    @Autowired
    LoanController loanController;
    @Autowired
    OrdercddService ordercddService;
    @Autowired
    ApplicationContext applicationContext;
    @Autowired
    UserService userService;
    @RequestMapping(value = "/test", method = RequestMethod.GET)
    @ResponseBody
    public Object test(HttpServletRequest request, HttpServletResponse response) throws IOException, ClassNotFoundException {

//        Class.forName("")
//                return applicationContext.getBean(Class.forName("com.liyang.service.OrdercddService"))
//        return ordercddService.workflowTree();
        return new Tree();
    }

    /**
     * @return
     */
    private Map<String, Object> 迁移() {
        List<User> users = userRepository.findAll();
        HashMap<String, Object> hashMap = new HashMap<>();
        for (User entity : users) {
            try {
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                entity.setSig(TIMSignature.generate(entity.getId().toString()).urlSig);
                userRepository.save(entity);

                hashMap.put(entity.getId().toString(), entity.getSig());

                timService.addUser(entity.getId().toString(), entity.getUsername(), "");
                //创建默认account
                //begin 新建完user创建默认的account --Jax
                accountService.createdDefaultAccountByUser(entity);
                //end
            } catch (Exception e) {
            }
        }
        return hashMap;
    }

    //
    private String 迁移ByUserId(String username) {
        User entity = userRepository.findByUsername(username);
        if (entity != null) {
            return "不存在";
        }
        try {
            entity.setSig(TIMSignature.generate(entity.getId().toString()).urlSig);
            userRepository.save(entity);
            timService.addUser(entity.getId().toString(), entity.getUsername(), "");
            //创建默认account
            //begin 新建完user创建默认的account --Jax
            accountService.createdDefaultAccountByUser(entity);
            //end
        } catch (Exception e) {
        }
        return "success";
    }

}
