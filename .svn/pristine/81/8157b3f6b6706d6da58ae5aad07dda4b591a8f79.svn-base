"use strict";app.controller("workflowEntityConfigModuleController",["$rootScope","$scope","$http","$stateParams",function(a,b,d,c){b.entity_key=c.entity_key;b.openMindPage=function(){window.open("tpl/workflowEntityConfigs/mind.html?entity="+b.entity_key,"_blank")}}]);app.controller("workflowEntityConfigActListController",["$rootScope","$scope","$http","$state","$stateParams","entity",function(a,c,f,d,e,b){c.entity_key=e.entity_key;c.acts=[];b.getList("/rest/"+c.entity_key+"Acts?size=10000").then(function(g){c.acts=g._embeddedItems});c.actEdit=function(g){d.go("workflowEntityConfig.actEdit",{act_id:g},{reload:true})};c.actRole=function(g){d.go("workflowEntityConfig.actRole",{act_id:g},{reload:true})}}]);app.controller("workflowEntityConfigActFormController",["$rootScope","$scope","$http","$state","$stateParams","entity",function(a,c,f,d,e,b){c.entity_key=e.entity_key;c.act_id=e.act_id;c.act={};c.noticeRole=null;c.nextWorkflow=null;c.targetState=null;c.noticeDepartmenttype=null;c.messageSender=null;c.allMessengerSender=[];c.allRoles=[];c.allStates=[];c.allWorkflows=[];c.allDepartmenttypes=[];c.allActGroups=a.allEntitiesInfo[c.entity_key+"Act"].actGroup.values;c.allActTypes=a.allEntitiesInfo[c.entity_key+"Act"].actType.values;c.getAllStates=function(){b.getList("/rest/"+c.entity_key+"States?size=10000").then(function(g){c.allStates=g._embeddedItems;if(c.act_id){b.getDetail(c.act._links.targetState.href).then(function(h){c.targetState=b.getSelectedMyOwn(c.allStates,h)})}})};c.getAllWorkflows=function(){b.getList("/rest/"+c.entity_key+"Workflows?size=10000").then(function(g){c.allWorkflows=g._embeddedItems;if(c.act_id){b.getDetail(c.act._links.nextWorkflow.href).then(function(h){c.nextWorkflow=b.getSelectedMyOwn(c.allWorkflows,h)})}})};c.getAllDepartmenttypes=function(){b.getList("/rest/departmenttypes?size=10000").then(function(g){c.allDepartmenttypes=g._embeddedItems;if(c.act_id){b.getDetail(c.act._links.noticeDepartmenttype.href).then(function(h){c.noticeDepartmenttype=b.getSelectedMyOwn(c.allDepartmenttypes,h);if(c.noticeDepartmenttype){c.setRoleFromDepartment(true)}})}else{c.setRoleFromDepartment(false)}})};c.getAllMessengerSender=function(){b.getList("/rest/users/search/findByRoleRoleCode?roleCode=MESSENGER_SENDER").then(function(g){c.allMessengerSender=g._embeddedItems})};if(c.act_id){b.getDetail("rest/"+c.entity_key+"Acts/"+c.act_id).then(function(g){c.act=g;c.getAllStates();c.getAllWorkflows();c.getAllDepartmenttypes();c.getAllMessengerSender()})}else{c.getAllStates();c.getAllWorkflows();c.getAllDepartmenttypes();c.getAllMessengerSender()}c.setRoleFromDepartment=function(g){if(c.noticeDepartmenttype&&g){b.getList(c.noticeDepartmenttype._links.roles.href).then(function(h){c.allRoles=h._embeddedItems;b.getDetail(c.act._links.noticeRole.href).then(function(i){c.noticeRole=b.getSelectedMyOwn(c.allRoles,i)})})}else{if(c.noticeDepartmenttype&&!g){b.getList(c.noticeDepartmenttype._links.roles.href).then(function(h){c.allRoles=h._embeddedItems})}}};c.save=function(){var g="";angular.forEach(c.noticeRole,function(i,h){g=i.id+"-"+g});c.act.noticeRoles=g.substring(0,g.length-1)?g.substring(0,g.length-1):null;c.act.targetState=c.targetState?c.targetState._links.self.href:null;c.act.nextWorkflow=c.nextWorkflow?c.nextWorkflow._links.self.href:null;c.act.noticeDepartmenttype=c.noticeDepartmenttype?c.noticeDepartmenttype._links.self.href:null;c.act.messageSender=c.messageSender?c.messageSender._links.self.href:null;if(c.act._links){f({url:c.act._links.self.href,method:"PATCH",data:c.act}).success(function(h){d.go("workflowEntityConfig.acts",{},{reload:true});a.toasterSuccess("成功！","修改成功！")})}else{f.post("rest/"+c.entity_key+"Acts",c.act).success(function(h){d.go("workflowEntityConfig.acts",{},{reload:true});a.toasterSuccess("成功！","新建成功！")})}}}]);app.controller("workflowEntityConfigActRoleController",["$rootScope","$scope","$http","$stateParams","entity",function(a,c,e,d,b){c.entity_key=d.entity_key;c.act_id=d.act_id;c.allRoles=[];c.actRoles=[];b.getList("/rest/"+c.entity_key+"Acts/"+c.act_id+"/roles?size=10000").then(function(f){c.actRoles=f._embeddedItems;b.getList("/rest/roles?size=10000").then(function(g){c.allRoles=g._embeddedItems;angular.forEach(c.allRoles,function(i,h){i.isSelected=false;angular.forEach(c.actRoles,function(k,j){if(k.id===i.id){i.isSelected=true}})})})});c.changeActRole=function(f){if(f.isSelected){e({method:"PATCH",url:"/rest/"+c.entity_key+"Acts/"+c.act_id+"/roles",data:f._links.self.href,headers:{"Content-Type":"text/uri-list"}}).success(function(g){a.toasterSuccess("成功！","关联成功！")})}else{e({method:"DELETE",url:"/rest/"+c.entity_key+"Acts/"+c.act_id+"/roles/"+f.id}).success(function(g){a.toasterInfo("成功！","已取消关联！")})}}}]);app.controller("workflowEntityConfigStateListController",["$rootScope","$scope","$http","$state","$stateParams","entity",function(a,c,f,d,e,b){c.entity_key=e.entity_key;c.states=[];b.getList("/rest/"+c.entity_key+"States?size=10000").then(function(g){c.states=g._embeddedItems});c.stateEdit=function(g){d.go("workflowEntityConfig.stateEdit",{state_id:g},{reload:true})};c.stateAct=function(g){d.go("workflowEntityConfig.stateAct",{state_id:g},{reload:true})}}]);app.controller("workflowEntityConfigStateFormController",["$rootScope","$scope","$http","$state","$stateParams","entity",function(a,c,f,d,e,b){c.entity_key=e.entity_key;c.state_id=e.state_id;c.state={};if(c.state_id){b.getDetail("rest/"+c.entity_key+"States/"+c.state_id).then(function(g){c.state=g})}c.save=function(){if(c.state._links){f({url:c.state._links.self.href,method:"PATCH",data:c.state}).success(function(g){d.go("workflowEntityConfig.states",{},{reload:true});a.toasterSuccess("成功！","修改成功！")}).error(function(g){})}else{f.post("rest/"+c.entity_key+"States",c.state).success(function(g){d.go("workflowEntityConfig.states",{},{reload:true});a.toasterSuccess("成功！","新建成功！")})}}}]);app.controller("workflowEntityConfigStateActController",["$rootScope","$scope","$http","$stateParams","entity",function(a,c,e,d,b){c.entity_key=d.entity_key;c.state_id=d.state_id;c.allActs=[];c.stateActs=[];b.getList("/rest/"+c.entity_key+"Acts?size=10000").then(function(f){c.allActs=f._embeddedItems;b.getList("/rest/"+c.entity_key+"States/"+c.state_id+"/acts?size=10000").then(function(g){c.stateActs=g._embeddedItems;angular.forEach(c.allActs,function(i,h){i.isSelected=false;angular.forEach(c.stateActs,function(k,j){if(k.id===i.id){i.isSelected=true}})})})});c.changeStateAct=function(f){if(f.isSelected){e({method:"PATCH",url:"/rest/"+c.entity_key+"States/"+c.state_id+"/acts",data:f._links.self.href,headers:{"Content-Type":"text/uri-list"}}).success(function(g){a.toasterSuccess("成功！","关联成功！")})}else{e({method:"DELETE",url:"/rest/"+c.entity_key+"States/"+c.state_id+"/acts/"+f.id}).success(function(g){a.toasterInfo("成功！","已取消关联！")})}}}]);app.controller("workflowEntityConfigWorkflowListController",["$rootScope","$scope","$http","$state","$stateParams","entity",function(a,c,f,d,e,b){c.entity_key=e.entity_key;c.workflows=[];b.getList("/rest/"+c.entity_key+"Workflows?size=10000").then(function(g){c.workflows=g._embeddedItems});c.workflowEdit=function(g){d.go("workflowEntityConfig.workflowEdit",{workflow_id:g},{reload:true})};c.workflowState=function(g){d.go("workflowEntityConfig.workflowState",{workflow_id:g},{reload:true})}}]);app.controller("workflowEntityConfigWorkflowFormController",["$rootScope","$scope","$http","$state","$stateParams","entity",function(a,c,f,d,e,b){c.entity_key=e.entity_key;c.workflow_id=e.workflow_id;c.workflow={};if(c.workflow_id){b.getDetail("rest/"+c.entity_key+"Workflows/"+c.workflow_id).then(function(g){c.workflow=g})}c.save=function(){if(c.workflow._links){f({url:c.workflow._links.self.href,method:"PATCH",data:c.workflow}).success(function(g){d.go("workflowEntityConfig.workflows",{},{reload:true});a.toasterSuccess("成功！","修改成功！")}).error(function(g){})}else{f.post("rest/"+c.entity_key+"Workflows",c.workflow).success(function(g){d.go("workflowEntityConfig.workflows",{},{reload:true});a.toasterSuccess("成功！","新建成功！")})}}}]);app.controller("workflowEntityConfigWorkflowStateController",["$rootScope","$scope","$http","$stateParams","entity",function(a,c,e,d,b){c.entity_key=d.entity_key;c.workflow_id=d.workflow_id;c.allStates=[];c.workflowStates=[];b.getList("/rest/"+c.entity_key+"States?size=10000").then(function(f){c.allStates=f._embeddedItems;b.getList("/rest/"+c.entity_key+"Workflows/"+c.workflow_id+"/states?size=10000").then(function(g){c.workflowStates=g._embeddedItems;angular.forEach(c.allStates,function(i,h){i.isSelected=false;angular.forEach(c.workflowStates,function(k,j){if(k.id===i.id){i.isSelected=true}})})})});c.changeWorkflowState=function(f){if(f.isSelected){e({method:"PATCH",url:"/rest/"+c.entity_key+"Workflows/"+c.workflow_id+"/states",data:f._links.self.href,headers:{"Content-Type":"text/uri-list"}}).success(function(g){a.toasterSuccess("成功！","关联成功！")})}else{e({method:"DELETE",url:"/rest/"+c.entity_key+"Workflows/"+c.workflow_id+"/states/"+f.id}).success(function(g){a.toasterInfo("成功！","已取消关联！")})}}}]);