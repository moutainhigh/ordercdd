package com.liyang.controller.domain;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.liyang.domain.department.DepartmentState;
import com.liyang.util.CommonUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.jpa.query.expression.QueryExpSpecificationBuilder;
import com.jpa.query.expression.generic.GenericQueryExpSpecification;
import com.liyang.domain.vehicle.Vehicle;
import com.liyang.domain.vehicle.VehicleRepository;
import com.liyang.domain.person.Person;

/**
 * 部门
 *
 * @author Jh
 */
@RestController
@RequestMapping("/vehicle")
public class VehicleController {
    @Resource
    private VehicleRepository repository;
    @Autowired
    JdbcTemplate jdbcTemplate;

    @RequestMapping("/search")
    public EntityPage search(@RequestParam(required = false) Map<String, Object> params) {
        GenericQueryExpSpecification<Vehicle> queryExpression = new GenericQueryExpSpecification<Vehicle>();

        queryExpression.add(QueryExpSpecificationBuilder.eq("state.id", params.get("state_id"), true));

        //车牌号搜索
        if (params.get("plate_number") != null) {
            queryExpression.add(QueryExpSpecificationBuilder.like("plateNumber", params.get("plate_number").toString(), true));
        }

        //拥有人搜索
        if (params.get("person_name") != null) {
            queryExpression.add(QueryExpSpecificationBuilder.like("person.name", params.get("person_name").toString(), true));
        }

        Page<Vehicle> page = repository.findAll(queryExpression, EntityPageUtil.createPageable(params));
        String[] fields = new String[]{"id", "label", "plateNumber", "vehicleModel", "annualSurveyMaturity", "vehicleDate", "annualPolicyMaturity", "vehicleKm", "vehicleProvince", "vehicleCity", "GPSCode", "registerRegionName", "lastModifiedAt", "createdAt", "state", "person"};
        return EntityPageUtil.convert(page, fields);
    }


    @GetMapping("/getGpsStatusLogByID")
    public List<Map<String,Object>> getGpsStatusLogByID(@RequestParam(name ="vehicleId" ) Integer id) {
//        return jdbcTemplate.queryForList("SELECT difference FROM vehicle_log WHERE difference->>'$.gpsStatus' IS NOT NULL AND entity_id = ?", new Object[]{id});
        return jdbcTemplate.queryForList("SELECT difference->'$.gpsStatus' as gpsStatus,vlog.created_at,u.nickname FROM vehicle_log vlog left join `user` u ON vlog.created_by=u.id WHERE difference->>'$.gpsStatus' IS NOT NULL AND entity_id = ?", new Object[]{id});
    }
}
